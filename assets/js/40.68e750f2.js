(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{834:function(t,s,e){"use strict";e.r(s);var n=e(6),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jsonc-no-multi-str"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsonc-no-multi-str"}},[t._v("#")]),t._v(" jsonc/no-multi-str")]),t._v(" "),e("blockquote",[e("p",[t._v("disallow multiline strings")])]),t._v(" "),e("ul",[e("li",[t._v("⚙️ This rule is included in "),e("code",[t._v('"plugin:jsonc/recommended-with-json"')]),t._v(" and "),e("code",[t._v('"plugin:jsonc/recommended-with-jsonc"')]),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"rule-details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[t._v("#")]),t._v(" 📖 Rule Details")]),t._v(" "),e("p",[t._v("This rule is aimed at preventing the use of multiline strings.")]),t._v(" "),e("eslint-code-block",[e("div",{staticClass:"language-json5 extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json5"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint jsonc/no-multi-str: 'error' */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ✓ GOOD */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"GOOD"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Line 1 \\nLine 2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ✗ BAD */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BAD"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Line 1 \\\nLine 2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("h2",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" 🔧 Options")]),t._v(" "),e("p",[t._v("Nothing.")]),t._v(" "),e("h2",{attrs:{id:"related-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[t._v("#")]),t._v(" 👫 Related rules")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://eslint.org/docs/rules/no-multi-str",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-multi-str"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" 🚀 Version")]),t._v(" "),e("p",[t._v("This rule was introduced in eslint-plugin-jsonc v0.1.0")]),t._v(" "),e("h2",{attrs:{id:"implementation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" 🔍 Implementation")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-jsonc/blob/master/lib/rules/no-multi-str.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rule source"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-jsonc/blob/master/tests/lib/rules/no-multi-str.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test source"),e("OutboundLink")],1)])]),t._v(" "),e("p",[e("sup",[t._v("Taken with ❤️ "),e("a",{attrs:{href:"https://eslint.org/docs/rules/no-multi-str",target:"_blank",rel:"noopener noreferrer"}},[t._v("from ESLint core"),e("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);